"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/glightbox";
exports.ids = ["vendor-chunks/glightbox"];
exports.modules = {

/***/ "(ssr)/./node_modules/glightbox/dist/js/glightbox.min.js":
/*!*********************************************************!*\
  !*** ./node_modules/glightbox/dist/js/glightbox.min.js ***!
  \*********************************************************/
/***/ ((module) => {

eval("\n!function(e, t) {\n     true ? module.exports = t() : 0;\n}(void 0, function() {\n    \"use strict\";\n    function e(e) {\n        var t = function(e, t) {\n            if (\"object\" != typeof e || !e) return e;\n            var i = e[Symbol.toPrimitive];\n            if (void 0 !== i) {\n                var n = i.call(e, t || \"default\");\n                if (\"object\" != typeof n) return n;\n                throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n            }\n            return (\"string\" === t ? String : Number)(e);\n        }(e, \"string\");\n        return \"symbol\" == typeof t ? t : t + \"\";\n    }\n    function t(e) {\n        return (t = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n            return typeof e;\n        } : function(e) {\n            return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n        })(e);\n    }\n    function i(e, t) {\n        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n    function n(t, i) {\n        for(var n = 0; n < i.length; n++){\n            var s = i[n];\n            s.enumerable = s.enumerable || !1, s.configurable = !0, \"value\" in s && (s.writable = !0), Object.defineProperty(t, e(s.key), s);\n        }\n    }\n    function s(e, t, i) {\n        return t && n(e.prototype, t), i && n(e, i), Object.defineProperty(e, \"prototype\", {\n            writable: !1\n        }), e;\n    }\n    var l = Date.now();\n    function o() {\n        var e = {}, t = !0, i = 0, n = arguments.length;\n        \"[object Boolean]\" === Object.prototype.toString.call(arguments[0]) && (t = arguments[0], i++);\n        for(var s = function(i) {\n            for(var n in i)Object.prototype.hasOwnProperty.call(i, n) && (t && \"[object Object]\" === Object.prototype.toString.call(i[n]) ? e[n] = o(!0, e[n], i[n]) : e[n] = i[n]);\n        }; i < n; i++){\n            var l = arguments[i];\n            s(l);\n        }\n        return e;\n    }\n    function r(e, t) {\n        if ((E(e) || e === window || e === document) && (e = [\n            e\n        ]), L(e) || I(e) || (e = [\n            e\n        ]), 0 != M(e)) {\n            if (L(e) && !I(e)) for(var i = e.length, n = 0; n < i && !1 !== t.call(e[n], e[n], n, e); n++);\n            else if (I(e)) {\n                for(var s in e)if (P(e, s) && !1 === t.call(e[s], e[s], s, e)) break;\n            }\n        }\n    }\n    function a(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, n = e[l] = e[l] || [], s = {\n            all: n,\n            evt: null,\n            found: null\n        };\n        return t && i && M(n) > 0 && r(n, function(e, n) {\n            if (e.eventName == t && e.fn.toString() == i.toString()) return s.found = !0, s.evt = n, !1;\n        }), s;\n    }\n    function h(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = t.onElement, n = t.withCallback, s = t.avoidDuplicate, l = void 0 === s || s, o = t.once, h = void 0 !== o && o, d = t.useCapture, c = void 0 !== d && d, u = arguments.length > 2 ? arguments[2] : void 0, g = i || [];\n        function v(e) {\n            C(n) && n.call(u, e, this), h && v.destroy();\n        }\n        return k(g) && (g = document.querySelectorAll(g)), v.destroy = function() {\n            r(g, function(t) {\n                var i = a(t, e, v);\n                i.found && i.all.splice(i.evt, 1), t.removeEventListener && t.removeEventListener(e, v, c);\n            });\n        }, r(g, function(t) {\n            var i = a(t, e, v);\n            (t.addEventListener && l && !i.found || !l) && (t.addEventListener(e, v, c), i.all.push({\n                eventName: e,\n                fn: v\n            }));\n        }), v;\n    }\n    function d(e, t) {\n        r(t.split(\" \"), function(t) {\n            return e.classList.add(t);\n        });\n    }\n    function c(e, t) {\n        r(t.split(\" \"), function(t) {\n            return e.classList.remove(t);\n        });\n    }\n    function u(e, t) {\n        return e.classList.contains(t);\n    }\n    function g(e, t) {\n        for(; e !== document.body;){\n            if (!(e = e.parentElement)) return !1;\n            if (\"function\" == typeof e.matches ? e.matches(t) : e.msMatchesSelector(t)) return e;\n        }\n    }\n    function v(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\", i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n        if (!e || \"\" === t) return !1;\n        if (\"none\" === t) return C(i) && i(), !1;\n        var n = b(), s = t.split(\" \");\n        r(s, function(t) {\n            d(e, \"g\" + t);\n        }), h(n, {\n            onElement: e,\n            avoidDuplicate: !1,\n            once: !0,\n            withCallback: function(e, t) {\n                r(s, function(e) {\n                    c(t, \"g\" + e);\n                }), C(i) && i();\n            }\n        });\n    }\n    function f(e) {\n        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\n        if (\"\" === t) return e.style.webkitTransform = \"\", e.style.MozTransform = \"\", e.style.msTransform = \"\", e.style.OTransform = \"\", e.style.transform = \"\", !1;\n        e.style.webkitTransform = t, e.style.MozTransform = t, e.style.msTransform = t, e.style.OTransform = t, e.style.transform = t;\n    }\n    function p(e) {\n        e.style.display = \"block\";\n    }\n    function m(e) {\n        e.style.display = \"none\";\n    }\n    function y(e) {\n        var t = document.createDocumentFragment(), i = document.createElement(\"div\");\n        for(i.innerHTML = e; i.firstChild;)t.appendChild(i.firstChild);\n        return t;\n    }\n    function x() {\n        return {\n            width: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n            height: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\n        };\n    }\n    function b() {\n        var e, t = document.createElement(\"fakeelement\"), i = {\n            animation: \"animationend\",\n            OAnimation: \"oAnimationEnd\",\n            MozAnimation: \"animationend\",\n            WebkitAnimation: \"webkitAnimationEnd\"\n        };\n        for(e in i)if (void 0 !== t.style[e]) return i[e];\n    }\n    function S(e, t, i, n) {\n        if (e()) t();\n        else {\n            var s;\n            i || (i = 100);\n            var l = setInterval(function() {\n                e() && (clearInterval(l), s && clearTimeout(s), t());\n            }, i);\n            n && (s = setTimeout(function() {\n                clearInterval(l);\n            }, n));\n        }\n    }\n    function w(e, t, i) {\n        if (O(e)) console.error(\"Inject assets error\");\n        else if (C(t) && (i = t, t = !1), k(t) && t in window) C(i) && i();\n        else {\n            var n;\n            if (-1 !== e.indexOf(\".css\")) {\n                if ((n = document.querySelectorAll('link[href=\"' + e + '\"]')) && n.length > 0) return void (C(i) && i());\n                var s = document.getElementsByTagName(\"head\")[0], l = s.querySelectorAll('link[rel=\"stylesheet\"]'), o = document.createElement(\"link\");\n                return o.rel = \"stylesheet\", o.type = \"text/css\", o.href = e, o.media = \"all\", l ? s.insertBefore(o, l[0]) : s.appendChild(o), void (C(i) && i());\n            }\n            if ((n = document.querySelectorAll('script[src=\"' + e + '\"]')) && n.length > 0) {\n                if (C(i)) {\n                    if (k(t)) return S(function() {\n                        return void 0 !== window[t];\n                    }, function() {\n                        i();\n                    }), !1;\n                    i();\n                }\n            } else {\n                var r = document.createElement(\"script\");\n                r.type = \"text/javascript\", r.src = e, r.onload = function() {\n                    if (C(i)) {\n                        if (k(t)) return S(function() {\n                            return void 0 !== window[t];\n                        }, function() {\n                            i();\n                        }), !1;\n                        i();\n                    }\n                }, document.body.appendChild(r);\n            }\n        }\n    }\n    function T() {\n        return \"navigator\" in window && window.navigator.userAgent.match(/(iPad)|(iPhone)|(iPod)|(Android)|(PlayBook)|(BB10)|(BlackBerry)|(Opera Mini)|(IEMobile)|(webOS)|(MeeGo)/i);\n    }\n    function C(e) {\n        return \"function\" == typeof e;\n    }\n    function k(e) {\n        return \"string\" == typeof e;\n    }\n    function E(e) {\n        return !(!e || !e.nodeType || 1 != e.nodeType);\n    }\n    function A(e) {\n        return Array.isArray(e);\n    }\n    function L(e) {\n        return e && e.length && isFinite(e.length);\n    }\n    function I(e) {\n        return \"object\" === t(e) && null != e && !C(e) && !A(e);\n    }\n    function O(e) {\n        return null == e;\n    }\n    function P(e, t) {\n        return null !== e && hasOwnProperty.call(e, t);\n    }\n    function M(e) {\n        if (I(e)) {\n            if (e.keys) return e.keys().length;\n            var t = 0;\n            for(var i in e)P(e, i) && t++;\n            return t;\n        }\n        return e.length;\n    }\n    function z(e) {\n        return !isNaN(parseFloat(e)) && isFinite(e);\n    }\n    function X() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1, t = document.querySelectorAll(\".gbtn[data-taborder]:not(.disabled)\");\n        if (!t.length) return !1;\n        if (1 == t.length) return t[0];\n        \"string\" == typeof e && (e = parseInt(e));\n        var i = [];\n        r(t, function(e) {\n            i.push(e.getAttribute(\"data-taborder\"));\n        });\n        var n = Math.max.apply(Math, i.map(function(e) {\n            return parseInt(e);\n        })), s = e < 0 ? 1 : e + 1;\n        s > n && (s = \"1\");\n        var l = i.filter(function(e) {\n            return e >= parseInt(s);\n        }), o = l.sort()[0];\n        return document.querySelector('.gbtn[data-taborder=\"'.concat(o, '\"]'));\n    }\n    function Y(e) {\n        if (e.events.hasOwnProperty(\"keyboard\")) return !1;\n        e.events.keyboard = h(\"keydown\", {\n            onElement: window,\n            withCallback: function(t, i) {\n                var n = (t = t || window.event).keyCode;\n                if (9 == n) {\n                    var s = document.querySelector(\".gbtn.focused\");\n                    if (!s) {\n                        var l = !(!document.activeElement || !document.activeElement.nodeName) && document.activeElement.nodeName.toLocaleLowerCase();\n                        if (\"input\" == l || \"textarea\" == l || \"button\" == l) return;\n                    }\n                    t.preventDefault();\n                    var o = document.querySelectorAll(\".gbtn[data-taborder]\");\n                    if (!o || o.length <= 0) return;\n                    if (!s) {\n                        var r = X();\n                        return void (r && (r.focus(), d(r, \"focused\")));\n                    }\n                    var a = X(s.getAttribute(\"data-taborder\"));\n                    c(s, \"focused\"), a && (a.focus(), d(a, \"focused\"));\n                }\n                39 == n && e.nextSlide(), 37 == n && e.prevSlide(), 27 == n && e.close();\n            }\n        });\n    }\n    var q = s(function e(t, n) {\n        var s = this, l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;\n        if (i(this, e), this.img = t, this.slide = n, this.onclose = l, this.img.setZoomEvents) return !1;\n        this.active = !1, this.zoomedIn = !1, this.dragging = !1, this.currentX = null, this.currentY = null, this.initialX = null, this.initialY = null, this.xOffset = 0, this.yOffset = 0, this.img.addEventListener(\"mousedown\", function(e) {\n            return s.dragStart(e);\n        }, !1), this.img.addEventListener(\"mouseup\", function(e) {\n            return s.dragEnd(e);\n        }, !1), this.img.addEventListener(\"mousemove\", function(e) {\n            return s.drag(e);\n        }, !1), this.img.addEventListener(\"click\", function(e) {\n            return s.slide.classList.contains(\"dragging-nav\") ? (s.zoomOut(), !1) : s.zoomedIn ? void (s.zoomedIn && !s.dragging && s.zoomOut()) : s.zoomIn();\n        }, !1), this.img.setZoomEvents = !0;\n    }, [\n        {\n            key: \"zoomIn\",\n            value: function() {\n                var e = this.widowWidth();\n                if (!(this.zoomedIn || e <= 768)) {\n                    var t = this.img;\n                    if (t.setAttribute(\"data-style\", t.getAttribute(\"style\")), t.style.maxWidth = t.naturalWidth + \"px\", t.style.maxHeight = t.naturalHeight + \"px\", t.naturalWidth > e) {\n                        var i = e / 2 - t.naturalWidth / 2;\n                        this.setTranslate(this.img.parentNode, i, 0);\n                    }\n                    this.slide.classList.add(\"zoomed\"), this.zoomedIn = !0;\n                }\n            }\n        },\n        {\n            key: \"zoomOut\",\n            value: function() {\n                this.img.parentNode.setAttribute(\"style\", \"\"), this.img.setAttribute(\"style\", this.img.getAttribute(\"data-style\")), this.slide.classList.remove(\"zoomed\"), this.zoomedIn = !1, this.currentX = null, this.currentY = null, this.initialX = null, this.initialY = null, this.xOffset = 0, this.yOffset = 0, this.onclose && \"function\" == typeof this.onclose && this.onclose();\n            }\n        },\n        {\n            key: \"dragStart\",\n            value: function(e) {\n                e.preventDefault(), this.zoomedIn ? (\"touchstart\" === e.type ? (this.initialX = e.touches[0].clientX - this.xOffset, this.initialY = e.touches[0].clientY - this.yOffset) : (this.initialX = e.clientX - this.xOffset, this.initialY = e.clientY - this.yOffset), e.target === this.img && (this.active = !0, this.img.classList.add(\"dragging\"))) : this.active = !1;\n            }\n        },\n        {\n            key: \"dragEnd\",\n            value: function(e) {\n                var t = this;\n                e.preventDefault(), this.initialX = this.currentX, this.initialY = this.currentY, this.active = !1, setTimeout(function() {\n                    t.dragging = !1, t.img.isDragging = !1, t.img.classList.remove(\"dragging\");\n                }, 100);\n            }\n        },\n        {\n            key: \"drag\",\n            value: function(e) {\n                this.active && (e.preventDefault(), \"touchmove\" === e.type ? (this.currentX = e.touches[0].clientX - this.initialX, this.currentY = e.touches[0].clientY - this.initialY) : (this.currentX = e.clientX - this.initialX, this.currentY = e.clientY - this.initialY), this.xOffset = this.currentX, this.yOffset = this.currentY, this.img.isDragging = !0, this.dragging = !0, this.setTranslate(this.img, this.currentX, this.currentY));\n            }\n        },\n        {\n            key: \"onMove\",\n            value: function(e) {\n                if (this.zoomedIn) {\n                    var t = e.clientX - this.img.naturalWidth / 2, i = e.clientY - this.img.naturalHeight / 2;\n                    this.setTranslate(this.img, t, i);\n                }\n            }\n        },\n        {\n            key: \"setTranslate\",\n            value: function(e, t, i) {\n                e.style.transform = \"translate3d(\" + t + \"px, \" + i + \"px, 0)\";\n            }\n        },\n        {\n            key: \"widowWidth\",\n            value: function() {\n                return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n            }\n        }\n    ]), N = s(function e() {\n        var t = this, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        i(this, e);\n        var s = n.dragEl, l = n.toleranceX, o = void 0 === l ? 40 : l, r = n.toleranceY, a = void 0 === r ? 65 : r, h = n.slide, d = void 0 === h ? null : h, c = n.instance, u = void 0 === c ? null : c;\n        this.el = s, this.active = !1, this.dragging = !1, this.currentX = null, this.currentY = null, this.initialX = null, this.initialY = null, this.xOffset = 0, this.yOffset = 0, this.direction = null, this.lastDirection = null, this.toleranceX = o, this.toleranceY = a, this.toleranceReached = !1, this.dragContainer = this.el, this.slide = d, this.instance = u, this.el.addEventListener(\"mousedown\", function(e) {\n            return t.dragStart(e);\n        }, !1), this.el.addEventListener(\"mouseup\", function(e) {\n            return t.dragEnd(e);\n        }, !1), this.el.addEventListener(\"mousemove\", function(e) {\n            return t.drag(e);\n        }, !1);\n    }, [\n        {\n            key: \"dragStart\",\n            value: function(e) {\n                if (this.slide.classList.contains(\"zoomed\")) this.active = !1;\n                else {\n                    \"touchstart\" === e.type ? (this.initialX = e.touches[0].clientX - this.xOffset, this.initialY = e.touches[0].clientY - this.yOffset) : (this.initialX = e.clientX - this.xOffset, this.initialY = e.clientY - this.yOffset);\n                    var t = e.target.nodeName.toLowerCase();\n                    e.target.classList.contains(\"nodrag\") || g(e.target, \".nodrag\") || -1 !== [\n                        \"input\",\n                        \"select\",\n                        \"textarea\",\n                        \"button\",\n                        \"a\"\n                    ].indexOf(t) ? this.active = !1 : (e.preventDefault(), (e.target === this.el || \"img\" !== t && g(e.target, \".gslide-inline\")) && (this.active = !0, this.el.classList.add(\"dragging\"), this.dragContainer = g(e.target, \".ginner-container\")));\n                }\n            }\n        },\n        {\n            key: \"dragEnd\",\n            value: function(e) {\n                var t = this;\n                e && e.preventDefault(), this.initialX = 0, this.initialY = 0, this.currentX = null, this.currentY = null, this.initialX = null, this.initialY = null, this.xOffset = 0, this.yOffset = 0, this.active = !1, this.doSlideChange && (this.instance.preventOutsideClick = !0, \"right\" == this.doSlideChange && this.instance.prevSlide(), \"left\" == this.doSlideChange && this.instance.nextSlide()), this.doSlideClose && this.instance.close(), this.toleranceReached || this.setTranslate(this.dragContainer, 0, 0, !0), setTimeout(function() {\n                    t.instance.preventOutsideClick = !1, t.toleranceReached = !1, t.lastDirection = null, t.dragging = !1, t.el.isDragging = !1, t.el.classList.remove(\"dragging\"), t.slide.classList.remove(\"dragging-nav\"), t.dragContainer.style.transform = \"\", t.dragContainer.style.transition = \"\";\n                }, 100);\n            }\n        },\n        {\n            key: \"drag\",\n            value: function(e) {\n                if (this.active) {\n                    e.preventDefault(), this.slide.classList.add(\"dragging-nav\"), \"touchmove\" === e.type ? (this.currentX = e.touches[0].clientX - this.initialX, this.currentY = e.touches[0].clientY - this.initialY) : (this.currentX = e.clientX - this.initialX, this.currentY = e.clientY - this.initialY), this.xOffset = this.currentX, this.yOffset = this.currentY, this.el.isDragging = !0, this.dragging = !0, this.doSlideChange = !1, this.doSlideClose = !1;\n                    var t = Math.abs(this.currentX), i = Math.abs(this.currentY);\n                    if (t > 0 && t >= Math.abs(this.currentY) && (!this.lastDirection || \"x\" == this.lastDirection)) {\n                        this.yOffset = 0, this.lastDirection = \"x\", this.setTranslate(this.dragContainer, this.currentX, 0);\n                        var n = this.shouldChange();\n                        if (!this.instance.settings.dragAutoSnap && n && (this.doSlideChange = n), this.instance.settings.dragAutoSnap && n) return this.instance.preventOutsideClick = !0, this.toleranceReached = !0, this.active = !1, this.instance.preventOutsideClick = !0, this.dragEnd(null), \"right\" == n && this.instance.prevSlide(), void (\"left\" == n && this.instance.nextSlide());\n                    }\n                    if (this.toleranceY > 0 && i > 0 && i >= t && (!this.lastDirection || \"y\" == this.lastDirection)) {\n                        this.xOffset = 0, this.lastDirection = \"y\", this.setTranslate(this.dragContainer, 0, this.currentY);\n                        var s = this.shouldClose();\n                        return !this.instance.settings.dragAutoSnap && s && (this.doSlideClose = !0), void (this.instance.settings.dragAutoSnap && s && this.instance.close());\n                    }\n                }\n            }\n        },\n        {\n            key: \"shouldChange\",\n            value: function() {\n                var e = !1;\n                if (Math.abs(this.currentX) >= this.toleranceX) {\n                    var t = this.currentX > 0 ? \"right\" : \"left\";\n                    (\"left\" == t && this.slide !== this.slide.parentNode.lastChild || \"right\" == t && this.slide !== this.slide.parentNode.firstChild) && (e = t);\n                }\n                return e;\n            }\n        },\n        {\n            key: \"shouldClose\",\n            value: function() {\n                var e = !1;\n                return Math.abs(this.currentY) >= this.toleranceY && (e = !0), e;\n            }\n        },\n        {\n            key: \"setTranslate\",\n            value: function(e, t, i) {\n                var n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];\n                e.style.transition = n ? \"all .2s ease\" : \"\", e.style.transform = \"translate3d(\".concat(t, \"px, \").concat(i, \"px, 0)\");\n            }\n        }\n    ]);\n    function D(e, t, i, n) {\n        var s = e.querySelector(\".gslide-media\"), l = new Image, o = \"gSlideTitle_\" + i, r = \"gSlideDesc_\" + i;\n        l.addEventListener(\"load\", function() {\n            C(n) && n();\n        }, !1), l.src = t.href, \"\" != t.sizes && \"\" != t.srcset && (l.sizes = t.sizes, l.srcset = t.srcset), l.alt = \"\", O(t.alt) || \"\" === t.alt || (l.alt = t.alt), \"\" !== t.title && l.setAttribute(\"aria-labelledby\", o), \"\" !== t.description && l.setAttribute(\"aria-describedby\", r), t.hasOwnProperty(\"_hasCustomWidth\") && t._hasCustomWidth && (l.style.width = t.width), t.hasOwnProperty(\"_hasCustomHeight\") && t._hasCustomHeight && (l.style.height = t.height), s.insertBefore(l, s.firstChild);\n    }\n    function _(e, t, i, n) {\n        var s = this, l = e.querySelector(\".ginner-container\"), o = \"gvideo\" + i, r = e.querySelector(\".gslide-media\"), a = this.getAllPlayers();\n        d(l, \"gvideo-container\"), r.insertBefore(y('<div class=\"gvideo-wrapper\"></div>'), r.firstChild);\n        var h = e.querySelector(\".gvideo-wrapper\");\n        w(this.settings.plyr.css, \"Plyr\");\n        var c = t.href, u = null == t ? void 0 : t.videoProvider, g = !1;\n        r.style.maxWidth = t.width, w(this.settings.plyr.js, \"Plyr\", function() {\n            if (!u && c.match(/vimeo\\.com\\/([0-9]*)/) && (u = \"vimeo\"), !u && (c.match(/(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/) || c.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/) || c.match(/(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/) || c.match(/(youtube\\.com|youtube-nocookie\\.com)\\/shorts\\/([a-zA-Z0-9\\-_]+)/)) && (u = \"youtube\"), \"local\" === u || !u) {\n                u = \"local\";\n                var l = '<video id=\"' + o + '\" ';\n                l += 'style=\"background:#000; max-width: '.concat(t.width, ';\" '), l += 'preload=\"metadata\" ', l += 'x-webkit-airplay=\"allow\" ', l += \"playsinline \", l += \"controls \", l += 'class=\"gvideo-local\">', l += '<source src=\"'.concat(c, '\">'), g = y(l += \"</video>\");\n            }\n            var r = g || y('<div id=\"'.concat(o, '\" data-plyr-provider=\"').concat(u, '\" data-plyr-embed-id=\"').concat(c, '\"></div>'));\n            d(h, \"\".concat(u, \"-video gvideo\")), h.appendChild(r), h.setAttribute(\"data-id\", o), h.setAttribute(\"data-index\", i);\n            var v = P(s.settings.plyr, \"config\") ? s.settings.plyr.config : {}, f = new Plyr(\"#\" + o, v);\n            f.on(\"ready\", function(e) {\n                a[o] = e.detail.plyr, C(n) && n();\n            }), S(function() {\n                return e.querySelector(\"iframe\") && \"true\" == e.querySelector(\"iframe\").dataset.ready;\n            }, function() {\n                s.resize(e);\n            }), f.on(\"enterfullscreen\", W), f.on(\"exitfullscreen\", W);\n        });\n    }\n    function W(e) {\n        var t = g(e.target, \".gslide-media\");\n        \"enterfullscreen\" === e.type && d(t, \"fullscreen\"), \"exitfullscreen\" === e.type && c(t, \"fullscreen\");\n    }\n    function B(e, t, i, n) {\n        var s, l = this, o = e.querySelector(\".gslide-media\"), r = !(!P(t, \"href\") || !t.href) && t.href.split(\"#\").pop().trim(), a = !(!P(t, \"content\") || !t.content) && t.content;\n        if (a && (k(a) && (s = y('<div class=\"ginlined-content\">'.concat(a, \"</div>\"))), E(a))) {\n            \"none\" == a.style.display && (a.style.display = \"block\");\n            var c = document.createElement(\"div\");\n            c.className = \"ginlined-content\", c.appendChild(a), s = c;\n        }\n        if (r) {\n            var u = document.getElementById(r);\n            if (!u) return !1;\n            var g = u.cloneNode(!0);\n            g.style.height = t.height, g.style.maxWidth = t.width, d(g, \"ginlined-content\"), s = g;\n        }\n        if (!s) return console.error(\"Unable to append inline slide content\", t), !1;\n        o.style.height = t.height, o.style.width = t.width, o.appendChild(s), this.events[\"inlineclose\" + r] = h(\"click\", {\n            onElement: o.querySelectorAll(\".gtrigger-close\"),\n            withCallback: function(e) {\n                e.preventDefault(), l.close();\n            }\n        }), C(n) && n();\n    }\n    function H(e, t, i, n) {\n        var s = e.querySelector(\".gslide-media\"), l = function(e) {\n            var t = e.url, i = e.allow, n = e.callback, s = e.appendTo, l = document.createElement(\"iframe\");\n            return l.className = \"vimeo-video gvideo\", l.src = t, l.style.width = \"100%\", l.style.height = \"100%\", i && l.setAttribute(\"allow\", i), l.onload = function() {\n                l.onload = null, d(l, \"node-ready\"), C(n) && n();\n            }, s && s.appendChild(l), l;\n        }({\n            url: t.href,\n            callback: n\n        });\n        s.parentNode.style.maxWidth = t.width, s.parentNode.style.height = t.height, s.appendChild(l);\n    }\n    var j = s(function e() {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        i(this, e), this.defaults = {\n            href: \"\",\n            sizes: \"\",\n            srcset: \"\",\n            title: \"\",\n            type: \"\",\n            videoProvider: \"\",\n            description: \"\",\n            alt: \"\",\n            descPosition: \"bottom\",\n            effect: \"\",\n            width: \"\",\n            height: \"\",\n            content: !1,\n            zoomable: !0,\n            draggable: !0\n        }, I(t) && (this.defaults = o(this.defaults, t));\n    }, [\n        {\n            key: \"sourceType\",\n            value: function(e) {\n                var t = e;\n                return null !== (e = e.toLowerCase()).match(/\\.(jpeg|jpg|jpe|gif|png|apn|webp|avif|svg)/) ? \"image\" : e.match(/(youtube\\.com|youtube-nocookie\\.com)\\/watch\\?v=([a-zA-Z0-9\\-_]+)/) || e.match(/youtu\\.be\\/([a-zA-Z0-9\\-_]+)/) || e.match(/(youtube\\.com|youtube-nocookie\\.com)\\/embed\\/([a-zA-Z0-9\\-_]+)/) || e.match(/(youtube\\.com|youtube-nocookie\\.com)\\/shorts\\/([a-zA-Z0-9\\-_]+)/) || e.match(/vimeo\\.com\\/([0-9]*)/) || null !== e.match(/\\.(mp4|ogg|webm|mov)/) ? \"video\" : null !== e.match(/\\.(mp3|wav|wma|aac|ogg)/) ? \"audio\" : e.indexOf(\"#\") > -1 && \"\" !== t.split(\"#\").pop().trim() ? \"inline\" : e.indexOf(\"goajax=true\") > -1 ? \"ajax\" : \"external\";\n            }\n        },\n        {\n            key: \"parseConfig\",\n            value: function(e, t) {\n                var i = this, n = o({\n                    descPosition: t.descPosition\n                }, this.defaults);\n                if (I(e) && !E(e)) {\n                    P(e, \"type\") || (P(e, \"content\") && e.content ? e.type = \"inline\" : P(e, \"href\") && (e.type = this.sourceType(e.href)));\n                    var s = o(n, e);\n                    return this.setSize(s, t), s;\n                }\n                var l = \"\", a = e.getAttribute(\"data-glightbox\"), h = e.nodeName.toLowerCase();\n                if (\"a\" === h && (l = e.href), \"img\" === h && (l = e.src, n.alt = e.alt), n.href = l, r(n, function(s, l) {\n                    P(t, l) && \"width\" !== l && (n[l] = t[l]);\n                    var o = e.dataset[l];\n                    O(o) || (n[l] = i.sanitizeValue(o));\n                }), n.content && (n.type = \"inline\"), !n.type && l && (n.type = this.sourceType(l)), O(a)) {\n                    if (!n.title && \"a\" == h) {\n                        var d = e.title;\n                        O(d) || \"\" === d || (n.title = d);\n                    }\n                    if (!n.title && \"img\" == h) {\n                        var c = e.alt;\n                        O(c) || \"\" === c || (n.title = c);\n                    }\n                } else {\n                    var u = [];\n                    r(n, function(e, t) {\n                        u.push(\";\\\\s?\" + t);\n                    }), u = u.join(\"\\\\s?:|\"), \"\" !== a.trim() && r(n, function(e, t) {\n                        var s = a, l = new RegExp(\"s?\" + t + \"s?:s?(.*?)(\" + u + \"s?:|$)\"), o = s.match(l);\n                        if (o && o.length && o[1]) {\n                            var r = o[1].trim().replace(/;\\s*$/, \"\");\n                            n[t] = i.sanitizeValue(r);\n                        }\n                    });\n                }\n                if (n.description && \".\" === n.description.substring(0, 1)) {\n                    var g;\n                    try {\n                        g = document.querySelector(n.description).innerHTML;\n                    } catch (e) {\n                        if (!(e instanceof DOMException)) throw e;\n                    }\n                    g && (n.description = g);\n                }\n                if (!n.description) {\n                    var v = e.querySelector(\".glightbox-desc\");\n                    v && (n.description = v.innerHTML);\n                }\n                return this.setSize(n, t, e), this.slideConfig = n, n;\n            }\n        },\n        {\n            key: \"setSize\",\n            value: function(e, t) {\n                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, n = \"video\" == e.type ? this.checkSize(t.videosWidth) : this.checkSize(t.width), s = this.checkSize(t.height);\n                return e.width = P(e, \"width\") && \"\" !== e.width ? this.checkSize(e.width) : n, e.height = P(e, \"height\") && \"\" !== e.height ? this.checkSize(e.height) : s, i && \"image\" == e.type && (e._hasCustomWidth = !!i.dataset.width, e._hasCustomHeight = !!i.dataset.height), e;\n            }\n        },\n        {\n            key: \"checkSize\",\n            value: function(e) {\n                return z(e) ? \"\".concat(e, \"px\") : e;\n            }\n        },\n        {\n            key: \"sanitizeValue\",\n            value: function(e) {\n                return \"true\" !== e && \"false\" !== e ? e : \"true\" === e;\n            }\n        }\n    ]), V = s(function e(t, n, s) {\n        i(this, e), this.element = t, this.instance = n, this.index = s;\n    }, [\n        {\n            key: \"setContent\",\n            value: function() {\n                var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n                if (u(t, \"loaded\")) return !1;\n                var n = this.instance.settings, s = this.slideConfig, l = T();\n                C(n.beforeSlideLoad) && n.beforeSlideLoad({\n                    index: this.index,\n                    slide: t,\n                    player: !1\n                });\n                var o = s.type, r = s.descPosition, a = t.querySelector(\".gslide-media\"), h = t.querySelector(\".gslide-title\"), c = t.querySelector(\".gslide-desc\"), g = t.querySelector(\".gdesc-inner\"), v = i, f = \"gSlideTitle_\" + this.index, p = \"gSlideDesc_\" + this.index;\n                if (C(n.afterSlideLoad) && (v = function() {\n                    C(i) && i(), n.afterSlideLoad({\n                        index: e.index,\n                        slide: t,\n                        player: e.instance.getSlidePlayerInstance(e.index)\n                    });\n                }), \"\" == s.title && \"\" == s.description ? g && g.parentNode.parentNode.removeChild(g.parentNode) : (h && \"\" !== s.title ? (h.id = f, h.innerHTML = s.title) : h.parentNode.removeChild(h), c && \"\" !== s.description ? (c.id = p, l && n.moreLength > 0 ? (s.smallDescription = this.slideShortDesc(s.description, n.moreLength, n.moreText), c.innerHTML = s.smallDescription, this.descriptionEvents(c, s)) : c.innerHTML = s.description) : c.parentNode.removeChild(c), d(a.parentNode, \"desc-\".concat(r)), d(g.parentNode, \"description-\".concat(r))), d(a, \"gslide-\".concat(o)), d(t, \"loaded\"), \"video\" !== o) {\n                    if (\"external\" !== o) return \"inline\" === o ? (B.apply(this.instance, [\n                        t,\n                        s,\n                        this.index,\n                        v\n                    ]), void (s.draggable && new N({\n                        dragEl: t.querySelector(\".gslide-inline\"),\n                        toleranceX: n.dragToleranceX,\n                        toleranceY: n.dragToleranceY,\n                        slide: t,\n                        instance: this.instance\n                    }))) : void (\"image\" !== o ? C(v) && v() : D(t, s, this.index, function() {\n                        var i = t.querySelector(\"img\");\n                        s.draggable && new N({\n                            dragEl: i,\n                            toleranceX: n.dragToleranceX,\n                            toleranceY: n.dragToleranceY,\n                            slide: t,\n                            instance: e.instance\n                        }), s.zoomable && i.naturalWidth > i.offsetWidth && (d(i, \"zoomable\"), new q(i, t, function() {\n                            e.instance.resize();\n                        })), C(v) && v();\n                    }));\n                    H.apply(this, [\n                        t,\n                        s,\n                        this.index,\n                        v\n                    ]);\n                } else _.apply(this.instance, [\n                    t,\n                    s,\n                    this.index,\n                    v\n                ]);\n            }\n        },\n        {\n            key: \"slideShortDesc\",\n            value: function(e) {\n                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 50, i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n = document.createElement(\"div\");\n                n.innerHTML = e;\n                var s = n.innerText, l = i;\n                if ((e = s.trim()).length <= t) return e;\n                var o = e.substr(0, t - 1);\n                return l ? (n = null, o + '... <a href=\"#\" class=\"desc-more\">' + i + \"</a>\") : o;\n            }\n        },\n        {\n            key: \"descriptionEvents\",\n            value: function(e, t) {\n                var i = this, n = e.querySelector(\".desc-more\");\n                if (!n) return !1;\n                h(\"click\", {\n                    onElement: n,\n                    withCallback: function(e, n) {\n                        e.preventDefault();\n                        var s = document.body, l = g(n, \".gslide-desc\");\n                        if (!l) return !1;\n                        l.innerHTML = t.description, d(s, \"gdesc-open\");\n                        var o = h(\"click\", {\n                            onElement: [\n                                s,\n                                g(l, \".gslide-description\")\n                            ],\n                            withCallback: function(e, n) {\n                                \"a\" !== e.target.nodeName.toLowerCase() && (c(s, \"gdesc-open\"), d(s, \"gdesc-closed\"), l.innerHTML = t.smallDescription, i.descriptionEvents(l, t), setTimeout(function() {\n                                    c(s, \"gdesc-closed\");\n                                }, 400), o.destroy());\n                            }\n                        });\n                    }\n                });\n            }\n        },\n        {\n            key: \"create\",\n            value: function() {\n                return y(this.instance.settings.slideHTML);\n            }\n        },\n        {\n            key: \"getConfig\",\n            value: function() {\n                E(this.element) || this.element.hasOwnProperty(\"draggable\") || (this.element.draggable = this.instance.settings.draggable);\n                var e = new j(this.instance.settings.slideExtraAttributes);\n                return this.slideConfig = e.parseConfig(this.element, this.instance.settings), this.slideConfig;\n            }\n        }\n    ]);\n    function F(e) {\n        return Math.sqrt(e.x * e.x + e.y * e.y);\n    }\n    function R(e, t) {\n        var i = function(e, t) {\n            var i = F(e) * F(t);\n            if (0 === i) return 0;\n            var n = function(e, t) {\n                return e.x * t.x + e.y * t.y;\n            }(e, t) / i;\n            return n > 1 && (n = 1), Math.acos(n);\n        }(e, t);\n        return function(e, t) {\n            return e.x * t.y - t.x * e.y;\n        }(e, t) > 0 && (i *= -1), 180 * i / Math.PI;\n    }\n    var G = s(function e(t) {\n        i(this, e), this.handlers = [], this.el = t;\n    }, [\n        {\n            key: \"add\",\n            value: function(e) {\n                this.handlers.push(e);\n            }\n        },\n        {\n            key: \"del\",\n            value: function(e) {\n                e || (this.handlers = []);\n                for(var t = this.handlers.length; t >= 0; t--)this.handlers[t] === e && this.handlers.splice(t, 1);\n            }\n        },\n        {\n            key: \"dispatch\",\n            value: function() {\n                for(var e = 0, t = this.handlers.length; e < t; e++){\n                    var i = this.handlers[e];\n                    \"function\" == typeof i && i.apply(this.el, arguments);\n                }\n            }\n        }\n    ]);\n    function Z(e, t) {\n        var i = new G(e);\n        return i.add(t), i;\n    }\n    var U = s(function e(t, n) {\n        i(this, e), this.element = \"string\" == typeof t ? document.querySelector(t) : t, this.start = this.start.bind(this), this.move = this.move.bind(this), this.end = this.end.bind(this), this.cancel = this.cancel.bind(this), this.element.addEventListener(\"touchstart\", this.start, !1), this.element.addEventListener(\"touchmove\", this.move, !1), this.element.addEventListener(\"touchend\", this.end, !1), this.element.addEventListener(\"touchcancel\", this.cancel, !1), this.preV = {\n            x: null,\n            y: null\n        }, this.pinchStartLen = null, this.zoom = 1, this.isDoubleTap = !1;\n        var s = function() {};\n        this.rotate = Z(this.element, n.rotate || s), this.touchStart = Z(this.element, n.touchStart || s), this.multipointStart = Z(this.element, n.multipointStart || s), this.multipointEnd = Z(this.element, n.multipointEnd || s), this.pinch = Z(this.element, n.pinch || s), this.swipe = Z(this.element, n.swipe || s), this.tap = Z(this.element, n.tap || s), this.doubleTap = Z(this.element, n.doubleTap || s), this.longTap = Z(this.element, n.longTap || s), this.singleTap = Z(this.element, n.singleTap || s), this.pressMove = Z(this.element, n.pressMove || s), this.twoFingerPressMove = Z(this.element, n.twoFingerPressMove || s), this.touchMove = Z(this.element, n.touchMove || s), this.touchEnd = Z(this.element, n.touchEnd || s), this.touchCancel = Z(this.element, n.touchCancel || s), this.translateContainer = this.element, this._cancelAllHandler = this.cancelAll.bind(this), window.addEventListener(\"scroll\", this._cancelAllHandler), this.delta = null, this.last = null, this.now = null, this.tapTimeout = null, this.singleTapTimeout = null, this.longTapTimeout = null, this.swipeTimeout = null, this.x1 = this.x2 = this.y1 = this.y2 = null, this.preTapPosition = {\n            x: null,\n            y: null\n        };\n    }, [\n        {\n            key: \"start\",\n            value: function(e) {\n                if (e.touches) if (e.target && e.target.nodeName && [\n                    \"a\",\n                    \"button\",\n                    \"input\"\n                ].indexOf(e.target.nodeName.toLowerCase()) >= 0) console.log(\"ignore drag for this touched element\", e.target.nodeName.toLowerCase());\n                else {\n                    this.now = Date.now(), this.x1 = e.touches[0].pageX, this.y1 = e.touches[0].pageY, this.delta = this.now - (this.last || this.now), this.touchStart.dispatch(e, this.element), null !== this.preTapPosition.x && (this.isDoubleTap = this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30, this.isDoubleTap && clearTimeout(this.singleTapTimeout)), this.preTapPosition.x = this.x1, this.preTapPosition.y = this.y1, this.last = this.now;\n                    var t = this.preV;\n                    if (e.touches.length > 1) {\n                        this._cancelLongTap(), this._cancelSingleTap();\n                        var i = {\n                            x: e.touches[1].pageX - this.x1,\n                            y: e.touches[1].pageY - this.y1\n                        };\n                        t.x = i.x, t.y = i.y, this.pinchStartLen = F(t), this.multipointStart.dispatch(e, this.element);\n                    }\n                    this._preventTap = !1, this.longTapTimeout = setTimeout((function() {\n                        this.longTap.dispatch(e, this.element), this._preventTap = !0;\n                    }).bind(this), 750);\n                }\n            }\n        },\n        {\n            key: \"move\",\n            value: function(e) {\n                if (e.touches) {\n                    var t = this.preV, i = e.touches.length, n = e.touches[0].pageX, s = e.touches[0].pageY;\n                    if (this.isDoubleTap = !1, i > 1) {\n                        var l = e.touches[1].pageX, o = e.touches[1].pageY, r = {\n                            x: e.touches[1].pageX - n,\n                            y: e.touches[1].pageY - s\n                        };\n                        null !== t.x && (this.pinchStartLen > 0 && (e.zoom = F(r) / this.pinchStartLen, this.pinch.dispatch(e, this.element)), e.angle = R(r, t), this.rotate.dispatch(e, this.element)), t.x = r.x, t.y = r.y, null !== this.x2 && null !== this.sx2 ? (e.deltaX = (n - this.x2 + l - this.sx2) / 2, e.deltaY = (s - this.y2 + o - this.sy2) / 2) : (e.deltaX = 0, e.deltaY = 0), this.twoFingerPressMove.dispatch(e, this.element), this.sx2 = l, this.sy2 = o;\n                    } else {\n                        if (null !== this.x2) {\n                            e.deltaX = n - this.x2, e.deltaY = s - this.y2;\n                            var a = Math.abs(this.x1 - this.x2), h = Math.abs(this.y1 - this.y2);\n                            (a > 10 || h > 10) && (this._preventTap = !0);\n                        } else e.deltaX = 0, e.deltaY = 0;\n                        this.pressMove.dispatch(e, this.element);\n                    }\n                    this.touchMove.dispatch(e, this.element), this._cancelLongTap(), this.x2 = n, this.y2 = s, i > 1 && e.preventDefault();\n                }\n            }\n        },\n        {\n            key: \"end\",\n            value: function(e) {\n                if (e.changedTouches) {\n                    this._cancelLongTap();\n                    var t = this;\n                    e.touches.length < 2 && (this.multipointEnd.dispatch(e, this.element), this.sx2 = this.sy2 = null), this.x2 && Math.abs(this.x1 - this.x2) > 30 || this.y2 && Math.abs(this.y1 - this.y2) > 30 ? (e.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2), this.swipeTimeout = setTimeout(function() {\n                        t.swipe.dispatch(e, t.element);\n                    }, 0)) : (this.tapTimeout = setTimeout(function() {\n                        t._preventTap || t.tap.dispatch(e, t.element), t.isDoubleTap && (t.doubleTap.dispatch(e, t.element), t.isDoubleTap = !1);\n                    }, 0), t.isDoubleTap || (t.singleTapTimeout = setTimeout(function() {\n                        t.singleTap.dispatch(e, t.element);\n                    }, 250))), this.touchEnd.dispatch(e, this.element), this.preV.x = 0, this.preV.y = 0, this.zoom = 1, this.pinchStartLen = null, this.x1 = this.x2 = this.y1 = this.y2 = null;\n                }\n            }\n        },\n        {\n            key: \"cancelAll\",\n            value: function() {\n                this._preventTap = !0, clearTimeout(this.singleTapTimeout), clearTimeout(this.tapTimeout), clearTimeout(this.longTapTimeout), clearTimeout(this.swipeTimeout);\n            }\n        },\n        {\n            key: \"cancel\",\n            value: function(e) {\n                this.cancelAll(), this.touchCancel.dispatch(e, this.element);\n            }\n        },\n        {\n            key: \"_cancelLongTap\",\n            value: function() {\n                clearTimeout(this.longTapTimeout);\n            }\n        },\n        {\n            key: \"_cancelSingleTap\",\n            value: function() {\n                clearTimeout(this.singleTapTimeout);\n            }\n        },\n        {\n            key: \"_swipeDirection\",\n            value: function(e, t, i, n) {\n                return Math.abs(e - t) >= Math.abs(i - n) ? e - t > 0 ? \"Left\" : \"Right\" : i - n > 0 ? \"Up\" : \"Down\";\n            }\n        },\n        {\n            key: \"on\",\n            value: function(e, t) {\n                this[e] && this[e].add(t);\n            }\n        },\n        {\n            key: \"off\",\n            value: function(e, t) {\n                this[e] && this[e].del(t);\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function() {\n                return this.singleTapTimeout && clearTimeout(this.singleTapTimeout), this.tapTimeout && clearTimeout(this.tapTimeout), this.longTapTimeout && clearTimeout(this.longTapTimeout), this.swipeTimeout && clearTimeout(this.swipeTimeout), this.element.removeEventListener(\"touchstart\", this.start), this.element.removeEventListener(\"touchmove\", this.move), this.element.removeEventListener(\"touchend\", this.end), this.element.removeEventListener(\"touchcancel\", this.cancel), this.rotate.del(), this.touchStart.del(), this.multipointStart.del(), this.multipointEnd.del(), this.pinch.del(), this.swipe.del(), this.tap.del(), this.doubleTap.del(), this.longTap.del(), this.singleTap.del(), this.pressMove.del(), this.twoFingerPressMove.del(), this.touchMove.del(), this.touchEnd.del(), this.touchCancel.del(), this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null, window.removeEventListener(\"scroll\", this._cancelAllHandler), null;\n            }\n        }\n    ]);\n    function $(e) {\n        var t = function() {\n            var e, t = document.createElement(\"fakeelement\"), i = {\n                transition: \"transitionend\",\n                OTransition: \"oTransitionEnd\",\n                MozTransition: \"transitionend\",\n                WebkitTransition: \"webkitTransitionEnd\"\n            };\n            for(e in i)if (void 0 !== t.style[e]) return i[e];\n        }(), i = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth, n = u(e, \"gslide-media\") ? e : e.querySelector(\".gslide-media\"), s = g(n, \".ginner-container\"), l = e.querySelector(\".gslide-description\");\n        i > 769 && (n = s), d(n, \"greset\"), f(n, \"translate3d(0, 0, 0)\"), h(t, {\n            onElement: n,\n            once: !0,\n            withCallback: function(e, t) {\n                c(n, \"greset\");\n            }\n        }), n.style.opacity = \"\", l && (l.style.opacity = \"\");\n    }\n    function J(e) {\n        if (e.events.hasOwnProperty(\"touch\")) return !1;\n        var t, i, n, s = x(), l = s.width, o = s.height, r = !1, a = null, h = null, v = null, p = !1, m = 1, y = 1, b = !1, S = !1, w = null, T = null, C = null, k = null, E = 0, A = 0, L = !1, I = !1, O = {}, P = {}, M = 0, z = 0, X = document.getElementById(\"glightbox-slider\"), Y = document.querySelector(\".goverlay\"), q = new U(X, {\n            touchStart: function(t) {\n                if (r = !0, (u(t.targetTouches[0].target, \"ginner-container\") || g(t.targetTouches[0].target, \".gslide-desc\") || \"a\" == t.targetTouches[0].target.nodeName.toLowerCase()) && (r = !1), g(t.targetTouches[0].target, \".gslide-inline\") && !u(t.targetTouches[0].target.parentNode, \"gslide-inline\") && (r = !1), r) {\n                    if (P = t.targetTouches[0], O.pageX = t.targetTouches[0].pageX, O.pageY = t.targetTouches[0].pageY, M = t.targetTouches[0].clientX, z = t.targetTouches[0].clientY, a = e.activeSlide, h = a.querySelector(\".gslide-media\"), n = a.querySelector(\".gslide-inline\"), v = null, u(h, \"gslide-image\") && (v = h.querySelector(\"img\")), (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) > 769 && (h = a.querySelector(\".ginner-container\")), c(Y, \"greset\"), t.pageX > 20 && t.pageX < window.innerWidth - 20) return;\n                    t.preventDefault();\n                }\n            },\n            touchMove: function(s) {\n                if (r && (P = s.targetTouches[0], !b && !S)) {\n                    if (n && n.offsetHeight > o) {\n                        var a = O.pageX - P.pageX;\n                        if (Math.abs(a) <= 13) return !1;\n                    }\n                    p = !0;\n                    var d, c = s.targetTouches[0].clientX, u = s.targetTouches[0].clientY, g = M - c, m = z - u;\n                    if (Math.abs(g) > Math.abs(m) ? (L = !1, I = !0) : (I = !1, L = !0), t = P.pageX - O.pageX, E = 100 * t / l, i = P.pageY - O.pageY, A = 100 * i / o, L && v && (d = 1 - Math.abs(i) / o, Y.style.opacity = d, e.settings.touchFollowAxis && (E = 0)), I && (d = 1 - Math.abs(t) / l, h.style.opacity = d, e.settings.touchFollowAxis && (A = 0)), !v) return f(h, \"translate3d(\".concat(E, \"%, 0, 0)\"));\n                    f(h, \"translate3d(\".concat(E, \"%, \").concat(A, \"%, 0)\"));\n                }\n            },\n            touchEnd: function() {\n                if (r) {\n                    if (p = !1, S || b) return C = w, void (k = T);\n                    var t = Math.abs(parseInt(A)), i = Math.abs(parseInt(E));\n                    if (!(t > 29 && v)) return t < 29 && i < 25 ? (d(Y, \"greset\"), Y.style.opacity = 1, $(h)) : void 0;\n                    e.close();\n                }\n            },\n            multipointEnd: function() {\n                setTimeout(function() {\n                    b = !1;\n                }, 50);\n            },\n            multipointStart: function() {\n                b = !0, m = y || 1;\n            },\n            pinch: function(e) {\n                if (!v || p) return !1;\n                b = !0, v.scaleX = v.scaleY = m * e.zoom;\n                var t = m * e.zoom;\n                if (S = !0, t <= 1) return S = !1, t = 1, k = null, C = null, w = null, T = null, void v.setAttribute(\"style\", \"\");\n                t > 4.5 && (t = 4.5), v.style.transform = \"scale3d(\".concat(t, \", \").concat(t, \", 1)\"), y = t;\n            },\n            pressMove: function(e) {\n                if (S && !b) {\n                    var t = P.pageX - O.pageX, i = P.pageY - O.pageY;\n                    C && (t += C), k && (i += k), w = t, T = i;\n                    var n = \"translate3d(\".concat(t, \"px, \").concat(i, \"px, 0)\");\n                    y && (n += \" scale3d(\".concat(y, \", \").concat(y, \", 1)\")), f(v, n);\n                }\n            },\n            swipe: function(t) {\n                if (!S) if (b) b = !1;\n                else {\n                    if (\"Left\" == t.direction) {\n                        if (e.index == e.elements.length - 1) return $(h);\n                        e.nextSlide();\n                    }\n                    if (\"Right\" == t.direction) {\n                        if (0 == e.index) return $(h);\n                        e.prevSlide();\n                    }\n                }\n            }\n        });\n        e.events.touch = q;\n    }\n    var K = T(), Q = null !== T() || void 0 !== document.createTouch || \"ontouchstart\" in window || \"onmsgesturechange\" in window || navigator.msMaxTouchPoints, ee = document.getElementsByTagName(\"html\")[0], te = {\n        selector: \".glightbox\",\n        elements: null,\n        skin: \"clean\",\n        theme: \"clean\",\n        closeButton: !0,\n        startAt: null,\n        autoplayVideos: !0,\n        autofocusVideos: !0,\n        descPosition: \"bottom\",\n        width: \"900px\",\n        height: \"506px\",\n        videosWidth: \"960px\",\n        beforeSlideChange: null,\n        afterSlideChange: null,\n        beforeSlideLoad: null,\n        afterSlideLoad: null,\n        slideInserted: null,\n        slideRemoved: null,\n        slideExtraAttributes: null,\n        onOpen: null,\n        onClose: null,\n        loop: !1,\n        zoomable: !0,\n        draggable: !0,\n        dragAutoSnap: !1,\n        dragToleranceX: 40,\n        dragToleranceY: 65,\n        preload: !0,\n        oneSlidePerOpen: !1,\n        touchNavigation: !0,\n        touchFollowAxis: !0,\n        keyboardNavigation: !0,\n        closeOnOutsideClick: !0,\n        plugins: !1,\n        plyr: {\n            css: \"https://cdn.plyr.io/3.6.12/plyr.css\",\n            js: \"https://cdn.plyr.io/3.6.12/plyr.js\",\n            config: {\n                ratio: \"16:9\",\n                fullscreen: {\n                    enabled: !0,\n                    iosNative: !0\n                },\n                youtube: {\n                    noCookie: !0,\n                    rel: 0,\n                    showinfo: 0,\n                    iv_load_policy: 3\n                },\n                vimeo: {\n                    byline: !1,\n                    portrait: !1,\n                    title: !1,\n                    transparent: !1\n                }\n            }\n        },\n        openEffect: \"zoom\",\n        closeEffect: \"zoom\",\n        slideEffect: \"slide\",\n        moreText: \"See more\",\n        moreLength: 60,\n        cssEfects: {\n            fade: {\n                in: \"fadeIn\",\n                out: \"fadeOut\"\n            },\n            zoom: {\n                in: \"zoomIn\",\n                out: \"zoomOut\"\n            },\n            slide: {\n                in: \"slideInRight\",\n                out: \"slideOutLeft\"\n            },\n            slideBack: {\n                in: \"slideInLeft\",\n                out: \"slideOutRight\"\n            },\n            none: {\n                in: \"none\",\n                out: \"none\"\n            }\n        },\n        svg: {\n            close: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\" xml:space=\"preserve\"><g><g><path d=\"M505.943,6.058c-8.077-8.077-21.172-8.077-29.249,0L6.058,476.693c-8.077,8.077-8.077,21.172,0,29.249C10.096,509.982,15.39,512,20.683,512c5.293,0,10.586-2.019,14.625-6.059L505.943,35.306C514.019,27.23,514.019,14.135,505.943,6.058z\"/></g></g><g><g><path d=\"M505.942,476.694L35.306,6.059c-8.076-8.077-21.172-8.077-29.248,0c-8.077,8.076-8.077,21.171,0,29.248l470.636,470.636c4.038,4.039,9.332,6.058,14.625,6.058c5.293,0,10.587-2.019,14.624-6.057C514.018,497.866,514.018,484.771,505.942,476.694z\"/></g></g></svg>',\n            next: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 477.175 477.175\" xml:space=\"preserve\"> <g><path d=\"M360.731,229.075l-225.1-225.1c-5.3-5.3-13.8-5.3-19.1,0s-5.3,13.8,0,19.1l215.5,215.5l-215.5,215.5c-5.3,5.3-5.3,13.8,0,19.1c2.6,2.6,6.1,4,9.5,4c3.4,0,6.9-1.3,9.5-4l225.1-225.1C365.931,242.875,365.931,234.275,360.731,229.075z\"/></g></svg>',\n            prev: '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 477.175 477.175\" xml:space=\"preserve\"><g><path d=\"M145.188,238.575l215.5-215.5c5.3-5.3,5.3-13.8,0-19.1s-13.8-5.3-19.1,0l-225.1,225.1c-5.3,5.3-5.3,13.8,0,19.1l225.1,225c2.6,2.6,6.1,4,9.5,4s6.9-1.3,9.5-4c5.3-5.3,5.3-13.8,0-19.1L145.188,238.575z\"/></g></svg>'\n        },\n        slideHTML: '<div class=\"gslide\">\\n    <div class=\"gslide-inner-content\">\\n        <div class=\"ginner-container\">\\n            <div class=\"gslide-media\">\\n            </div>\\n            <div class=\"gslide-description\">\\n                <div class=\"gdesc-inner\">\\n                    <h4 class=\"gslide-title\"></h4>\\n                    <div class=\"gslide-desc\"></div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>',\n        lightboxHTML: '<div id=\"glightbox-body\" class=\"glightbox-container\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"false\">\\n    <div class=\"gloader visible\"></div>\\n    <div class=\"goverlay\"></div>\\n    <div class=\"gcontainer\">\\n    <div id=\"glightbox-slider\" class=\"gslider\"></div>\\n    <button class=\"gclose gbtn\" aria-label=\"Close\" data-taborder=\"3\">{closeSVG}</button>\\n    <button class=\"gprev gbtn\" aria-label=\"Previous\" data-taborder=\"2\">{prevSVG}</button>\\n    <button class=\"gnext gbtn\" aria-label=\"Next\" data-taborder=\"1\">{nextSVG}</button>\\n</div>\\n</div>'\n    }, ie = s(function e() {\n        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n        i(this, e), this.customOptions = t, this.settings = o(te, t), this.effectsClasses = this.getAnimationClasses(), this.videoPlayers = {}, this.apiEvents = [], this.fullElementsList = !1;\n    }, [\n        {\n            key: \"init\",\n            value: function() {\n                var e = this, t = this.getSelector();\n                t && (this.baseEvents = h(\"click\", {\n                    onElement: t,\n                    withCallback: function(t, i) {\n                        t.preventDefault(), e.open(i);\n                    }\n                })), this.elements = this.getElements();\n            }\n        },\n        {\n            key: \"open\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;\n                if (0 === this.elements.length) return !1;\n                this.activeSlide = null, this.prevActiveSlideIndex = null, this.prevActiveSlide = null;\n                var i = z(t) ? t : this.settings.startAt;\n                if (E(e)) {\n                    var n = e.getAttribute(\"data-gallery\");\n                    n && (this.fullElementsList = this.elements, this.elements = this.getGalleryElements(this.elements, n)), O(i) && (i = this.getElementIndex(e)) < 0 && (i = 0);\n                }\n                z(i) || (i = 0), this.build(), v(this.overlay, \"none\" === this.settings.openEffect ? \"none\" : this.settings.cssEfects.fade.in);\n                var s = document.body, l = window.innerWidth - document.documentElement.clientWidth;\n                if (l > 0) {\n                    var o = document.createElement(\"style\");\n                    o.type = \"text/css\", o.className = \"gcss-styles\", o.innerText = \".gscrollbar-fixer {margin-right: \".concat(l, \"px}\"), document.head.appendChild(o), d(s, \"gscrollbar-fixer\");\n                }\n                d(s, \"glightbox-open\"), d(ee, \"glightbox-open\"), K && (d(document.body, \"glightbox-mobile\"), this.settings.slideEffect = \"slide\"), this.showSlide(i, !0), 1 === this.elements.length ? (d(this.prevButton, \"glightbox-button-hidden\"), d(this.nextButton, \"glightbox-button-hidden\")) : (c(this.prevButton, \"glightbox-button-hidden\"), c(this.nextButton, \"glightbox-button-hidden\")), this.lightboxOpen = !0, this.trigger(\"open\"), C(this.settings.onOpen) && this.settings.onOpen(), Q && this.settings.touchNavigation && J(this), this.settings.keyboardNavigation && Y(this);\n            }\n        },\n        {\n            key: \"openAt\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;\n                this.open(null, e);\n            }\n        },\n        {\n            key: \"showSlide\",\n            value: function() {\n                var e = this, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0, i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];\n                p(this.loader), this.index = parseInt(t);\n                var n = this.slidesContainer.querySelector(\".current\");\n                n && c(n, \"current\"), this.slideAnimateOut();\n                var s = this.slidesContainer.querySelectorAll(\".gslide\")[t];\n                if (u(s, \"loaded\")) this.slideAnimateIn(s, i), m(this.loader);\n                else {\n                    p(this.loader);\n                    var l = this.elements[t], o = {\n                        index: this.index,\n                        slide: s,\n                        slideNode: s,\n                        slideConfig: l.slideConfig,\n                        slideIndex: this.index,\n                        trigger: l.node,\n                        player: null\n                    };\n                    this.trigger(\"slide_before_load\", o), l.instance.setContent(s, function() {\n                        m(e.loader), e.resize(), e.slideAnimateIn(s, i), e.trigger(\"slide_after_load\", o);\n                    });\n                }\n                this.slideDescription = s.querySelector(\".gslide-description\"), this.slideDescriptionContained = this.slideDescription && u(this.slideDescription.parentNode, \"gslide-media\"), this.settings.preload && (this.preloadSlide(t + 1), this.preloadSlide(t - 1)), this.updateNavigationClasses(), this.activeSlide = s;\n            }\n        },\n        {\n            key: \"preloadSlide\",\n            value: function(e) {\n                var t = this;\n                if (e < 0 || e > this.elements.length - 1) return !1;\n                if (O(this.elements[e])) return !1;\n                var i = this.slidesContainer.querySelectorAll(\".gslide\")[e];\n                if (u(i, \"loaded\")) return !1;\n                var n = this.elements[e], s = n.type, l = {\n                    index: e,\n                    slide: i,\n                    slideNode: i,\n                    slideConfig: n.slideConfig,\n                    slideIndex: e,\n                    trigger: n.node,\n                    player: null\n                };\n                this.trigger(\"slide_before_load\", l), \"video\" === s || \"external\" === s ? setTimeout(function() {\n                    n.instance.setContent(i, function() {\n                        t.trigger(\"slide_after_load\", l);\n                    });\n                }, 200) : n.instance.setContent(i, function() {\n                    t.trigger(\"slide_after_load\", l);\n                });\n            }\n        },\n        {\n            key: \"prevSlide\",\n            value: function() {\n                this.goToSlide(this.index - 1);\n            }\n        },\n        {\n            key: \"nextSlide\",\n            value: function() {\n                this.goToSlide(this.index + 1);\n            }\n        },\n        {\n            key: \"goToSlide\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];\n                if (this.prevActiveSlide = this.activeSlide, this.prevActiveSlideIndex = this.index, !this.loop() && (e < 0 || e > this.elements.length - 1)) return !1;\n                e < 0 ? e = this.elements.length - 1 : e >= this.elements.length && (e = 0), this.showSlide(e);\n            }\n        },\n        {\n            key: \"insertSlide\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : -1;\n                t < 0 && (t = this.elements.length);\n                var i = new V(e, this, t), n = i.getConfig(), s = o({}, n), l = i.create(), r = this.elements.length - 1;\n                s.index = t, s.node = !1, s.instance = i, s.slideConfig = n, this.elements.splice(t, 0, s);\n                var a = null, h = null;\n                if (this.slidesContainer) {\n                    if (t > r) this.slidesContainer.appendChild(l);\n                    else {\n                        var d = this.slidesContainer.querySelectorAll(\".gslide\")[t];\n                        this.slidesContainer.insertBefore(l, d);\n                    }\n                    (this.settings.preload && 0 == this.index && 0 == t || this.index - 1 == t || this.index + 1 == t) && this.preloadSlide(t), 0 === this.index && 0 === t && (this.index = 1), this.updateNavigationClasses(), a = this.slidesContainer.querySelectorAll(\".gslide\")[t], h = this.getSlidePlayerInstance(t), s.slideNode = a;\n                }\n                this.trigger(\"slide_inserted\", {\n                    index: t,\n                    slide: a,\n                    slideNode: a,\n                    slideConfig: n,\n                    slideIndex: t,\n                    trigger: null,\n                    player: h\n                }), C(this.settings.slideInserted) && this.settings.slideInserted({\n                    index: t,\n                    slide: a,\n                    player: h\n                });\n            }\n        },\n        {\n            key: \"removeSlide\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;\n                if (e < 0 || e > this.elements.length - 1) return !1;\n                var t = this.slidesContainer && this.slidesContainer.querySelectorAll(\".gslide\")[e];\n                t && (this.getActiveSlideIndex() == e && (e == this.elements.length - 1 ? this.prevSlide() : this.nextSlide()), t.parentNode.removeChild(t)), this.elements.splice(e, 1), this.trigger(\"slide_removed\", e), C(this.settings.slideRemoved) && this.settings.slideRemoved(e);\n            }\n        },\n        {\n            key: \"slideAnimateIn\",\n            value: function(e, t) {\n                var i = this, n = e.querySelector(\".gslide-media\"), s = e.querySelector(\".gslide-description\"), l = {\n                    index: this.prevActiveSlideIndex,\n                    slide: this.prevActiveSlide,\n                    slideNode: this.prevActiveSlide,\n                    slideIndex: this.prevActiveSlide,\n                    slideConfig: O(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].slideConfig,\n                    trigger: O(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].node,\n                    player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)\n                }, o = {\n                    index: this.index,\n                    slide: this.activeSlide,\n                    slideNode: this.activeSlide,\n                    slideConfig: this.elements[this.index].slideConfig,\n                    slideIndex: this.index,\n                    trigger: this.elements[this.index].node,\n                    player: this.getSlidePlayerInstance(this.index)\n                };\n                if (n.offsetWidth > 0 && s && (m(s), s.style.display = \"\"), c(e, this.effectsClasses), t) v(e, this.settings.cssEfects[this.settings.openEffect].in, function() {\n                    i.settings.autoplayVideos && i.slidePlayerPlay(e), i.trigger(\"slide_changed\", {\n                        prev: l,\n                        current: o\n                    }), C(i.settings.afterSlideChange) && i.settings.afterSlideChange.apply(i, [\n                        l,\n                        o\n                    ]);\n                });\n                else {\n                    var r = this.settings.slideEffect, a = \"none\" !== r ? this.settings.cssEfects[r].in : r;\n                    this.prevActiveSlideIndex > this.index && \"slide\" == this.settings.slideEffect && (a = this.settings.cssEfects.slideBack.in), v(e, a, function() {\n                        i.settings.autoplayVideos && i.slidePlayerPlay(e), i.trigger(\"slide_changed\", {\n                            prev: l,\n                            current: o\n                        }), C(i.settings.afterSlideChange) && i.settings.afterSlideChange.apply(i, [\n                            l,\n                            o\n                        ]);\n                    });\n                }\n                setTimeout(function() {\n                    i.resize(e);\n                }, 100), d(e, \"current\");\n            }\n        },\n        {\n            key: \"slideAnimateOut\",\n            value: function() {\n                if (!this.prevActiveSlide) return !1;\n                var e = this.prevActiveSlide;\n                c(e, this.effectsClasses), d(e, \"prev\");\n                var t = this.settings.slideEffect, i = \"none\" !== t ? this.settings.cssEfects[t].out : t;\n                this.slidePlayerPause(e), this.trigger(\"slide_before_change\", {\n                    prev: {\n                        index: this.prevActiveSlideIndex,\n                        slide: this.prevActiveSlide,\n                        slideNode: this.prevActiveSlide,\n                        slideIndex: this.prevActiveSlideIndex,\n                        slideConfig: O(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].slideConfig,\n                        trigger: O(this.prevActiveSlideIndex) ? null : this.elements[this.prevActiveSlideIndex].node,\n                        player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)\n                    },\n                    current: {\n                        index: this.index,\n                        slide: this.activeSlide,\n                        slideNode: this.activeSlide,\n                        slideIndex: this.index,\n                        slideConfig: this.elements[this.index].slideConfig,\n                        trigger: this.elements[this.index].node,\n                        player: this.getSlidePlayerInstance(this.index)\n                    }\n                }), C(this.settings.beforeSlideChange) && this.settings.beforeSlideChange.apply(this, [\n                    {\n                        index: this.prevActiveSlideIndex,\n                        slide: this.prevActiveSlide,\n                        player: this.getSlidePlayerInstance(this.prevActiveSlideIndex)\n                    },\n                    {\n                        index: this.index,\n                        slide: this.activeSlide,\n                        player: this.getSlidePlayerInstance(this.index)\n                    }\n                ]), this.prevActiveSlideIndex > this.index && \"slide\" == this.settings.slideEffect && (i = this.settings.cssEfects.slideBack.out), v(e, i, function() {\n                    var t = e.querySelector(\".ginner-container\"), i = e.querySelector(\".gslide-media\"), n = e.querySelector(\".gslide-description\");\n                    t.style.transform = \"\", i.style.transform = \"\", c(i, \"greset\"), i.style.opacity = \"\", n && (n.style.opacity = \"\"), c(e, \"prev\");\n                });\n            }\n        },\n        {\n            key: \"getAllPlayers\",\n            value: function() {\n                return this.videoPlayers;\n            }\n        },\n        {\n            key: \"getSlidePlayerInstance\",\n            value: function(e) {\n                var t = \"gvideo\" + e, i = this.getAllPlayers();\n                return !(!P(i, t) || !i[t]) && i[t];\n            }\n        },\n        {\n            key: \"stopSlideVideo\",\n            value: function(e) {\n                if (E(e)) {\n                    var t = e.querySelector(\".gvideo-wrapper\");\n                    t && (e = t.getAttribute(\"data-index\"));\n                }\n                console.log(\"stopSlideVideo is deprecated, use slidePlayerPause\");\n                var i = this.getSlidePlayerInstance(e);\n                i && i.playing && i.pause();\n            }\n        },\n        {\n            key: \"slidePlayerPause\",\n            value: function(e) {\n                if (E(e)) {\n                    var t = e.querySelector(\".gvideo-wrapper\");\n                    t && (e = t.getAttribute(\"data-index\"));\n                }\n                var i = this.getSlidePlayerInstance(e);\n                i && i.playing && i.pause();\n            }\n        },\n        {\n            key: \"playSlideVideo\",\n            value: function(e) {\n                if (E(e)) {\n                    var t = e.querySelector(\".gvideo-wrapper\");\n                    t && (e = t.getAttribute(\"data-index\"));\n                }\n                console.log(\"playSlideVideo is deprecated, use slidePlayerPlay\");\n                var i = this.getSlidePlayerInstance(e);\n                i && !i.playing && i.play();\n            }\n        },\n        {\n            key: \"slidePlayerPlay\",\n            value: function(e) {\n                var t;\n                if (!K || null !== (t = this.settings.plyr.config) && void 0 !== t && t.muted) {\n                    if (E(e)) {\n                        var i = e.querySelector(\".gvideo-wrapper\");\n                        i && (e = i.getAttribute(\"data-index\"));\n                    }\n                    var n = this.getSlidePlayerInstance(e);\n                    n && !n.playing && (n.play(), this.settings.autofocusVideos && n.elements.container.focus());\n                }\n            }\n        },\n        {\n            key: \"setElements\",\n            value: function(e) {\n                var t = this;\n                this.settings.elements = !1;\n                var i = [];\n                e && e.length && r(e, function(e, n) {\n                    var s = new V(e, t, n), l = s.getConfig(), r = o({}, l);\n                    r.slideConfig = l, r.instance = s, r.index = n, i.push(r);\n                }), this.elements = i, this.lightboxOpen && (this.slidesContainer.innerHTML = \"\", this.elements.length && (r(this.elements, function() {\n                    var e = y(t.settings.slideHTML);\n                    t.slidesContainer.appendChild(e);\n                }), this.showSlide(0, !0)));\n            }\n        },\n        {\n            key: \"getElementIndex\",\n            value: function(e) {\n                var t = !1;\n                return r(this.elements, function(i, n) {\n                    if (P(i, \"node\") && i.node == e) return t = n, !0;\n                }), t;\n            }\n        },\n        {\n            key: \"getElements\",\n            value: function() {\n                var e = this, t = [];\n                this.elements = this.elements ? this.elements : [], !O(this.settings.elements) && A(this.settings.elements) && this.settings.elements.length && r(this.settings.elements, function(i, n) {\n                    var s = new V(i, e, n), l = s.getConfig(), r = o({}, l);\n                    r.node = !1, r.index = n, r.instance = s, r.slideConfig = l, t.push(r);\n                });\n                var i = !1;\n                return this.getSelector() && (i = document.querySelectorAll(this.getSelector())), i ? (r(i, function(i, n) {\n                    var s = new V(i, e, n), l = s.getConfig(), r = o({}, l);\n                    r.node = i, r.index = n, r.instance = s, r.slideConfig = l, r.gallery = i.getAttribute(\"data-gallery\"), t.push(r);\n                }), t) : t;\n            }\n        },\n        {\n            key: \"getGalleryElements\",\n            value: function(e, t) {\n                return e.filter(function(e) {\n                    return e.gallery == t;\n                });\n            }\n        },\n        {\n            key: \"getSelector\",\n            value: function() {\n                return !this.settings.elements && (this.settings.selector && \"data-\" == this.settings.selector.substring(0, 5) ? \"*[\".concat(this.settings.selector, \"]\") : this.settings.selector);\n            }\n        },\n        {\n            key: \"getActiveSlide\",\n            value: function() {\n                return this.slidesContainer.querySelectorAll(\".gslide\")[this.index];\n            }\n        },\n        {\n            key: \"getActiveSlideIndex\",\n            value: function() {\n                return this.index;\n            }\n        },\n        {\n            key: \"getAnimationClasses\",\n            value: function() {\n                var e = [];\n                for(var t in this.settings.cssEfects)if (this.settings.cssEfects.hasOwnProperty(t)) {\n                    var i = this.settings.cssEfects[t];\n                    e.push(\"g\".concat(i.in)), e.push(\"g\".concat(i.out));\n                }\n                return e.join(\" \");\n            }\n        },\n        {\n            key: \"build\",\n            value: function() {\n                var e = this;\n                if (this.built) return !1;\n                var t = document.body.childNodes, i = [];\n                r(t, function(e) {\n                    e.parentNode == document.body && \"#\" !== e.nodeName.charAt(0) && e.hasAttribute && !e.hasAttribute(\"aria-hidden\") && (i.push(e), e.setAttribute(\"aria-hidden\", \"true\"));\n                });\n                var n = P(this.settings.svg, \"next\") ? this.settings.svg.next : \"\", s = P(this.settings.svg, \"prev\") ? this.settings.svg.prev : \"\", l = P(this.settings.svg, \"close\") ? this.settings.svg.close : \"\", o = this.settings.lightboxHTML;\n                o = y(o = (o = (o = o.replace(/{nextSVG}/g, n)).replace(/{prevSVG}/g, s)).replace(/{closeSVG}/g, l)), document.body.appendChild(o);\n                var a = document.getElementById(\"glightbox-body\");\n                this.modal = a;\n                var c = a.querySelector(\".gclose\");\n                this.prevButton = a.querySelector(\".gprev\"), this.nextButton = a.querySelector(\".gnext\"), this.overlay = a.querySelector(\".goverlay\"), this.loader = a.querySelector(\".gloader\"), this.slidesContainer = document.getElementById(\"glightbox-slider\"), this.bodyHiddenChildElms = i, this.events = {}, d(this.modal, \"glightbox-\" + this.settings.skin), this.settings.closeButton && c && (this.events.close = h(\"click\", {\n                    onElement: c,\n                    withCallback: function(t, i) {\n                        t.preventDefault(), e.close();\n                    }\n                })), c && !this.settings.closeButton && c.parentNode.removeChild(c), this.nextButton && (this.events.next = h(\"click\", {\n                    onElement: this.nextButton,\n                    withCallback: function(t, i) {\n                        t.preventDefault(), e.nextSlide();\n                    }\n                })), this.prevButton && (this.events.prev = h(\"click\", {\n                    onElement: this.prevButton,\n                    withCallback: function(t, i) {\n                        t.preventDefault(), e.prevSlide();\n                    }\n                })), this.settings.closeOnOutsideClick && (this.events.outClose = h(\"click\", {\n                    onElement: a,\n                    withCallback: function(t, i) {\n                        e.preventOutsideClick || u(document.body, \"glightbox-mobile\") || g(t.target, \".ginner-container\") || g(t.target, \".gbtn\") || u(t.target, \"gnext\") || u(t.target, \"gprev\") || e.close();\n                    }\n                })), r(this.elements, function(t, i) {\n                    e.slidesContainer.appendChild(t.instance.create()), t.slideNode = e.slidesContainer.querySelectorAll(\".gslide\")[i];\n                }), Q && d(document.body, \"glightbox-touch\"), this.events.resize = h(\"resize\", {\n                    onElement: window,\n                    withCallback: function() {\n                        e.resize();\n                    }\n                }), this.built = !0;\n            }\n        },\n        {\n            key: \"resize\",\n            value: function() {\n                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;\n                if ((e = e || this.activeSlide) && !u(e, \"zoomed\")) {\n                    var t = x(), i = e.querySelector(\".gvideo-wrapper\"), n = e.querySelector(\".gslide-image\"), s = this.slideDescription, l = t.width, o = t.height;\n                    if (l <= 768 ? d(document.body, \"glightbox-mobile\") : c(document.body, \"glightbox-mobile\"), i || n) {\n                        var r = !1;\n                        if (s && (u(s, \"description-bottom\") || u(s, \"description-top\")) && !u(s, \"gabsolute\") && (r = !0), n) {\n                            if (l <= 768) n.querySelector(\"img\");\n                            else if (r) {\n                                var a, h = s.offsetHeight, g = n.querySelector(\"img\"), v = this.elements[this.index].node, f = null !== (a = v.getAttribute(\"data-height\")) && void 0 !== a ? a : \"100vh\";\n                                g.setAttribute(\"style\", \"max-height: calc(\".concat(f, \" - \").concat(h, \"px)\")), s.setAttribute(\"style\", \"max-width: \".concat(g.offsetWidth, \"px;\"));\n                            }\n                        }\n                        if (i) {\n                            var p = P(this.settings.plyr.config, \"ratio\") ? this.settings.plyr.config.ratio : \"\";\n                            if (!p) {\n                                var m = i.clientWidth, y = i.clientHeight, b = m / y;\n                                p = \"\".concat(m / b, \":\").concat(y / b);\n                            }\n                            var S = p.split(\":\"), w = this.settings.videosWidth, T = this.settings.videosWidth, C = (T = z(w) || -1 !== w.indexOf(\"px\") ? parseInt(w) : -1 !== w.indexOf(\"vw\") ? l * parseInt(w) / 100 : -1 !== w.indexOf(\"vh\") ? o * parseInt(w) / 100 : -1 !== w.indexOf(\"%\") ? l * parseInt(w) / 100 : parseInt(i.clientWidth)) / (parseInt(S[0]) / parseInt(S[1]));\n                            if (C = Math.floor(C), r && (o -= s.offsetHeight), T > l || C > o || o < C && l > T) {\n                                var k = i.offsetWidth, E = i.offsetHeight, A = o / E, L = {\n                                    width: k * A,\n                                    height: E * A\n                                };\n                                i.parentNode.setAttribute(\"style\", \"max-width: \".concat(L.width, \"px\")), r && s.setAttribute(\"style\", \"max-width: \".concat(L.width, \"px;\"));\n                            } else i.parentNode.style.maxWidth = \"\".concat(w), r && s.setAttribute(\"style\", \"max-width: \".concat(w, \";\"));\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"reload\",\n            value: function() {\n                this.init();\n            }\n        },\n        {\n            key: \"updateNavigationClasses\",\n            value: function() {\n                var e = this.loop();\n                c(this.nextButton, \"disabled\"), c(this.prevButton, \"disabled\"), 0 == this.index && this.elements.length - 1 == 0 ? (d(this.prevButton, \"disabled\"), d(this.nextButton, \"disabled\")) : 0 !== this.index || e ? this.index !== this.elements.length - 1 || e || d(this.nextButton, \"disabled\") : d(this.prevButton, \"disabled\");\n            }\n        },\n        {\n            key: \"loop\",\n            value: function() {\n                var e = P(this.settings, \"loopAtEnd\") ? this.settings.loopAtEnd : null;\n                return e = P(this.settings, \"loop\") ? this.settings.loop : e, e;\n            }\n        },\n        {\n            key: \"close\",\n            value: function() {\n                var e = this;\n                if (!this.lightboxOpen) {\n                    if (this.events) {\n                        for(var t in this.events)this.events.hasOwnProperty(t) && this.events[t].destroy();\n                        this.events = null;\n                    }\n                    return !1;\n                }\n                if (this.closing) return !1;\n                this.closing = !0, this.slidePlayerPause(this.activeSlide), this.fullElementsList && (this.elements = this.fullElementsList), this.bodyHiddenChildElms.length && r(this.bodyHiddenChildElms, function(e) {\n                    e.removeAttribute(\"aria-hidden\");\n                }), d(this.modal, \"glightbox-closing\"), v(this.overlay, \"none\" == this.settings.openEffect ? \"none\" : this.settings.cssEfects.fade.out), v(this.activeSlide, this.settings.cssEfects[this.settings.closeEffect].out, function() {\n                    if (e.activeSlide = null, e.prevActiveSlideIndex = null, e.prevActiveSlide = null, e.built = !1, e.events) {\n                        for(var t in e.events)e.events.hasOwnProperty(t) && e.events[t].destroy();\n                        e.events = null;\n                    }\n                    var i = document.body;\n                    c(ee, \"glightbox-open\"), c(i, \"glightbox-open touching gdesc-open glightbox-touch glightbox-mobile gscrollbar-fixer\"), e.modal.parentNode.removeChild(e.modal), e.trigger(\"close\"), C(e.settings.onClose) && e.settings.onClose();\n                    var n = document.querySelector(\".gcss-styles\");\n                    n && n.parentNode.removeChild(n), e.lightboxOpen = !1, e.closing = null;\n                });\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function() {\n                this.close(), this.clearAllEvents(), this.baseEvents && this.baseEvents.destroy();\n            }\n        },\n        {\n            key: \"on\",\n            value: function(e, t) {\n                var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];\n                if (!e || !C(t)) throw new TypeError(\"Event name and callback must be defined\");\n                this.apiEvents.push({\n                    evt: e,\n                    once: i,\n                    callback: t\n                });\n            }\n        },\n        {\n            key: \"once\",\n            value: function(e, t) {\n                this.on(e, t, !0);\n            }\n        },\n        {\n            key: \"trigger\",\n            value: function(e) {\n                var t = this, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, n = [];\n                r(this.apiEvents, function(t, s) {\n                    var l = t.evt, o = t.once, r = t.callback;\n                    l == e && (r(i), o && n.push(s));\n                }), n.length && r(n, function(e) {\n                    return t.apiEvents.splice(e, 1);\n                });\n            }\n        },\n        {\n            key: \"clearAllEvents\",\n            value: function() {\n                this.apiEvents.splice(0, this.apiEvents.length);\n            }\n        },\n        {\n            key: \"version\",\n            value: function() {\n                return \"3.3.0\";\n            }\n        }\n    ]);\n    return function() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, t = new ie(e);\n        return t.init(), t;\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/glightbox/dist/js/glightbox.min.js\n");

/***/ })

};
;